@import url("https://fonts.googleapis.com/css2?family=Geist:wght@100..900&display=swap");
@import url("https://unpkg.com/normalize.css") layer(normalize);

@layer normalize, base, paint, rainbow, header;

@layer rainbow {
	:root {
		--base: oklch(70% 0.155 360);
	}
	.wrap > button,
	.wrap > button::before,
	.wrap > button::after {
		animation-composition: add;
		animation: rainbow 12s infinite linear, rainbow 6s infinite linear;
		animation-play-state: var(--state, paused);
	}

	.wrap > button {
		background: linear-gradient(light-dark(#fff, #000) 0 0) padding-box,
			linear-gradient(0deg, #0000 0, var(--border) 12px) border-box,
			linear-gradient(in lch longer hue 90deg, var(--base) 0 0) border-box 0 0 /
			400% 100%;
	}

	.wrap > button::before {
		background: linear-gradient(#0000 0 0), linear-gradient(#0000 0 0),
			linear-gradient(in lch longer hue 90deg, var(--base) 0 0) border-box 0 0 /
			400% 100%;
	}

	.wrap > button::after {
		background: linear-gradient(#0000 0 0) padding-box,
			linear-gradient(#0000 0 0) border-box,
			linear-gradient(in lch longer hue 90deg, var(--base) 0 0) border-box 0 0 /
			400% 100%;
		mask: linear-gradient(#0000 0 0), linear-gradient(#fff 0 0);
		mask-clip: padding-box, border-box;
		mask-composite: intersect;
	}

	button:is(:hover) {
		--state: running;
	}

	.wrap:has(:active) {
		scale: 0.99;
	}

	.wrap {
		transition: scale 0.25s;
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.wrap button {
		--border: color-mix(in hsl, canvas, canvasText);
		padding: 0.5rem 1rem;
		border-radius: 6px;
		display: flex;
		align-items: center;
		gap: 0.625rem;
		border: 1px solid #0000;
		color: color-mix(in hsl, canvasText, canvas 34%);
		font: inherit;
		cursor: pointer;
		outline-offset: 0.5rem;
		outline: none;
		position: relative;

		&::after,
		&::before {
			pointer-events: none;
		}

		&::after {
			content: "";
			position: absolute;
			border: 2px solid #0000;
			inset: -8px;
			border-radius: 14px;
			opacity: 0;
		}

		&::before {
			content: "";
			position: absolute;
			inset: 0 5%;
			z-index: -2;
			translate: 0 2%;
			border-radius: 20%;
			filter: blur(12px);
			clip-path: inset(60% -100% -100% -100%);
			opacity: 0.5;
			transition: scale 0.24s;
		}
	}

	button:is(:hover, :focus-visible)::before {
		scale: 1.01 1.26;
	}

	button:focus-visible::after {
		opacity: 0.6;
	}

	@keyframes rainbow {
		to {
			background-position: 0 0, 0 0, 400% 0;
		}
	}
}

@layer paint {
	@property --pixel-paint-colors {
		syntax: "<color>#";
		initial-value: #f8fafc, #f1f5f9, #cbd5e1;
		inherits: false;
	}

	@property --pixel-paint-gap {
		syntax: "<number>";
		initial-value: 4;
		inherits: false;
	}

	@property --pixel-paint-progress {
		syntax: "<number>";
		initial-value: 0;
		inherits: true;
	}

	h1 {
		position: relative;
		padding-block: 3vmin;
		font-size: 10vmin;
		text-align: center;
	}

	h1 + p {
		margin-top: -7vmin;
		font-size: 1.125rem;
		line-height: 1.75;
		color: var(--gray);
		font-weight: 200;
		text-align: center;
		text-wrap: pretty;
	}

	@supports (background-image: paint(pixel-paint)) {
		h1 {
			color: transparent;
			background-clip: text;
			background-image: paint(pixel-paint);
			animation: 1s steps(10) infinite sparkle;
		}
	}

	@keyframes sparkle {
		to {
			--pixel-paint-progress: 1;
		}
	}
}

@layer header {
	header {
		position: sticky;
		top: 0;
		z-index: 50;
		border-bottom: 1px solid #222;
		backdrop-filter: blur(12px);
		height: 3.5rem;
		width: 100%;
	}

	header > nav {
		margin: 0px auto;
		display: flex;
		flex-direction: row;
		align-items: center;
		justify-content: center;
		padding-inline: 1rem;
		gap: 1.5rem;
		width: 100%;
		height: 100%;
		max-width: 1400px;
	}

	nav > a {
		display: inline-flex;
		align-items: center;
		gap: .25rem;
		padding: .5rem;
		cursor: pointer;

		&:hover {
			color: gray;
		}
	}
}

@layer base {
	:root {
		--font-size-min: 16;
		--font-size-max: 20;
		--font-ratio-min: 1.2;
		--font-ratio-max: 1.33;
		--font-width-min: 375;
		--font-width-max: 1500;
		--gray: oklch(0.77 0 0);
		--red: oklch(60% 0.4 25);
		--green: oklch(60% 0.3 140);
		--blue: oklch(60% 0.3 220);
		--yellow: oklch(90% 0.3 80);
		--purple: oklch(60% 0.4 300);
		--pink: oklch(80% 0.3 340);
		--cyan: oklch(70% 0.25 190);
	}

	html {
		color-scheme: light dark;
	}

	[data-theme="light"] {
		color-scheme: light only;
	}

	[data-theme="dark"] {
		color-scheme: dark only;
	}

	*,
	*:after,
	*:before {
		box-sizing: border-box;
	}

	body {
		background: light-dark(#fff, #000);
		place-items: center;
		min-height: 100vh;
		font-family: "Geist", "SF Pro Text", "SF Pro Icons", "AOS Icons",
			"Helvetica Neue", Helvetica, Arial, sans-serif, system-ui;
	}
	body::before {
		--size: 60px;
		--line: color-mix(in hsl, canvasText, transparent 90%);
		content: "";
		height: 100vh;
		width: 100vw;
		position: fixed;
		background: linear-gradient(
				90deg,
				var(--line) 1px,
				transparent 1px var(--size)
			)
			50% 50% / var(--size) var(--size),
			linear-gradient(var(--line) 1px, transparent 1px var(--size)) 50% 50% /
			var(--size) var(--size);
		mask: linear-gradient(-20deg, transparent 50%, white);
		top: 0;
		transform-style: flat;
		pointer-events: none;
		z-index: -1;
	}
}
